<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="RoofControl" Id="{c6ad4756-c196-4e89-b031-015370ff4b7e}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM RoofControl
VAR CONSTANT
	// max speed
	MAX_SPEED					: LREAL := 1;
END_VAR
VAR
	// commands for roofs
	open_roof1					: BOOL;
	close_roof1					: BOOL;
	stop_roof1					: BOOL;	
	open_roof2					: BOOL;
	close_roof2					: BOOL;
	stop_roof2					: BOOL;
	
	// open/closed status signals for both roofs (2 each)
	roof_open			AT%I*	: ARRAY[1..4] OF BOOL;
	roof_closed			AT%I*	: ARRAY[1..4] OF BOOL;
	
	// move direction for both roofs (2 each)
	roof_direction		AT%Q*	: ARRAY[1..4] OF BOOL;
	
	// move speed for both roofs (2 each)
	roof_moving					: ARRAY[1..4] OF BOOL;
	roof_vel_ramp				: ARRAY[1..4] OF FB_CTRL_RAMP_GENERATOR;
	roof_speed			AT%Q*	: ARRAY[1..4] OF LREAL;
	roof_target_speed	AT%Q*	: ARRAY[1..4] OF LREAL;	
	
	// ramp parameters for starting movement
	ramp_params			: ST_CTRL_RAMP_GENERATOR_PARAMS := (fVeloPos := 1, fVeloNeg := 1, tTaskCycleTime := T#100MS, tCtrlCycleTime := T#100MS);
	
	// loop variable	
	i					: INT;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[// commands
IF open_roof1 THEN
	open_roof(1);
	open_roof1 := FALSE;
END_IF
IF open_roof2 THEN
	open_roof(2);
	open_roof2 := FALSE;
END_IF

// velocity ramps
FOR i := 1 TO 4 BY 1 DO
	roof_vel_ramp[i](
		bEnable		:= roof_moving[i],
		fStart		:= roof_speed[i],
		fTarget		:= roof_target_speed[i],
		stParams	:= ramp_params,
		fOut		=> roof_speed[i]);
END_FOR;
	
// stop on limit switches
FOR i := 1 TO 4 BY 1 DO
    IF roof_open[i] OR roof_closed[i] OR NOT roof_moving[i] THEN
		stop_motor(i);
	END_IF
END_FOR;
]]></ST>
    </Implementation>
    <Method Name="open_roof" Id="{7c857f27-70cd-4108-b550-41d92bd02e94}">
      <Declaration><![CDATA[METHOD open_roof : BOOL
VAR_INPUT
	roof: INT;
END_VAR
VAR
	i: INT;	
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[FOR i := 0 TO 1 BY 1 DO
	roof_moving[2*(roof-1) + i] := TRUE;
	roof_direction[2*(roof-1) + i] := TRUE;
	roof_target_speed[2*(roof-1) + i] := MAX_SPEED;
END_FOR;]]></ST>
      </Implementation>
    </Method>
    <Method Name="stop_motor" Id="{88b8200b-e7da-4fa9-b778-681ac6987c0a}">
      <Declaration><![CDATA[METHOD stop_motor : BOOL
VAR_INPUT
	roof: INT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[roof_speed[roof] := 0;
roof_moving[roof] := FALSE;]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="RoofControl">
      <LineId Id="121" Count="2" />
      <LineId Id="142" Count="0" />
      <LineId Id="124" Count="0" />
      <LineId Id="144" Count="2" />
      <LineId Id="143" Count="0" />
      <LineId Id="125" Count="16" />
      <LineId Id="72" Count="0" />
    </LineIds>
    <LineIds Name="RoofControl.open_roof">
      <LineId Id="7" Count="0" />
      <LineId Id="15" Count="0" />
      <LineId Id="22" Count="1" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="RoofControl.stop_motor">
      <LineId Id="5" Count="0" />
      <LineId Id="7" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>