<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4026.8">
  <POU Name="SafetyHandling" Id="{6d4a788c-2168-4769-93de-c67314036861}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM SafetyHandling
VAR
	state           : BOOL;		// safety is okay
	estop			: BOOL;		// estop was triggered
            
	// power on delay
	//start_delay 	: TON := (PT := T#2S);
	//state_delay 	: TON := (PT := T#1S);

	// Safety group
	fbInfoGroup1			:FB_InfoGroup;
	stInfoGroup1	AT%I*	:ST_InfoDataGroup;
	sStateGroup1			:STRING;
	
	// Estop
	fbInfoEStop1			:FB_InfoEStop;
	stInfoEStop1 	AT%I*	:ST_InfoDataFB;
	sStateEStop1			:STRING;
	sDiagEStop1				:STRING;	
	
	// Info EL1904
	fbInfoSafetyIn			:FB_InfoConnection;
	stInfoSafetyIn 	AT%I*	:ST_InfoDataConnection;
	sStateSafetyIn			:STRING;
	sDiagSafetyIn			:STRING;
	bSafetyInCh1			:BOOL;
	bSafetyInCh2			:BOOL;
	bSafetyInCh3			:BOOL;
	bSafetyInCh4			:BOOL;
	
	// Info EL2904
	fbInfoSafetyOut			:FB_InfoConnection;
	stInfoSafetyOut AT%I*	:ST_InfoDataConnection;
	sStateSafetyOut			:STRING;
	sDiagSafetyOut			:STRING;
	bSafetyOutCh1			:BOOL;
	bSafetyOutCh2			:BOOL;
	bSafetyOutCh3			:BOOL;
	bSafetyOutCh4			:BOOL;
	
	// Errack logging
	ErrAckLog		: FB_EventLog;
	// restart logging
	RestartLog		: FB_EventLog;
	// safety logging
	SafetyLog		: FB_EventLog;
	
END_VAR
VAR_OUTPUT
	// error condition
	Error			: BOOL;
	// Emergency_stop engaged
	Emergency_stop	: BOOL;
END_VAR
VAR_INPUT
	// issue a remote restart
	//remote_restart:		BOOL;
	// issue a remute run/stop
	remote_run:			BOOL := TRUE;
	comm			: I_Comm;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[// Safety is running on start
GVL_Safety.Run := remote_run;

// get safety status
fbInfoGroup1(
	stInfoData	:= stInfoGroup1,
	sState		=> sStateGroup1);
state := sStateGroup1 = 'RUN';

// estop triggered?
fbInfoEStop1(
	stInfoData	:= stInfoEStop1, 
	sState		=> sStateEStop1, 
	sDiag		=> sDiagEStop1);
estop := sStateEStop1 = 'RUN';

//Info SafetyIn EL1904
fbInfoSafetyIn(
	stInfoData		:=stInfoSafetyIn, 
	sState			=>sStateSafetyIn, 
	sDiag			=>sDiagSafetyIn, 
	bChannel1		=>bSafetyInCh1, 
	bChannel2		=>bSafetyInCh2, 
	bChannel3		=>bSafetyInCh3, 
	bChannel4		=>bSafetyInCh4);	
	
//Info SafetyOut EL2904
fbInfoSafetyOut(
	stInfoData		:=stInfoSafetyOut, 
	sState			=>sStateSafetyOut, 
	sDiag			=>sDiagSafetyOut, 
	bChannel1		=>bSafetyOutCh1, 
	bChannel2		=>bSafetyOutCh2, 
	bChannel3		=>bSafetyOutCh3, 
	bChannel4		=>bSafetyOutCh4);
	
(*

// power on delay for Safety RESTART after RUN=1
start_delay(IN := TRUE);

CASE state OF
	0:
	    IF start_delay.Q  THEN
			GVL_Safety.ErrAck := TRUE;
			state := 1;
		END_IF
	1:
		state_delay(IN := TRUE);	
		IF state_delay.Q THEN
			GVL_Safety.ErrAck := FALSE;
			GVL_Safety.Restart := TRUE;
			state := 2;
			state_delay(IN := FALSE);
		END_IF
	2:
		state_delay(IN := TRUE);	
		IF state_delay.Q THEN
			GVL_Safety.Restart := FALSE;
			GVL_Safety.ErrAck := TRUE;
			state := 3;
			state_delay(IN := FALSE);
		END_IF
	3:
		state_delay(IN := TRUE);	
		IF state_delay.Q THEN	
			GVL_Safety.ErrAck := FALSE;
			state := 4;
			state_delay(IN := FALSE);
		END_IF	
END_CASE

// remote restart
IF remote_restart THEN
	state := 0;
	remote_restart := FALSE;
END_IF

// manual Err_Ack 
GVL_Safety.ErrAck := (GVL_Main.key_switch_remote AND GVL_Main.reset_switch);

// manual Restart
GVL_Safety.Restart := (GVL_Main.key_switch_remote AND GVL_Main.start_switch);
*)

ErrAckLog(  
	Trigger 	:= GVL_Safety.ErrAck,
	OnMessage 	:= 'Safety error was acknowledged.',
	Comm		:= comm
);
			
RestartLog(	
	Trigger 	:= GVL_Safety.Restart,
	Level 		:= ADSLOG_MSGTYPE_WARN,
	OnMessage 	:= 'Safety was restarted.',
	Comm		:= comm
);

SafetyLog(	
	Trigger 	:= Error,
	Level 		:= ADSLOG_MSGTYPE_ERROR,
	OnMessage 	:= 'Safety Error! Emergency stop enganged!',
	OffMessage 	:= 'Safety is OK.',
	OffLevel 	:= ADSLOG_MSGTYPE_HINT,
	Comm		:= comm);

(*
// wait n seconds after Start ...
start_delay(IN := TRUE);
// ... and send ErrAck for n milliseconds
ErrAck_Pulse(IN := (GVL_Safety.State = 2) AND start_delay.Q);

// Error Acknowledgment: Turn key_switch OFF and press STOP 
GVL_Safety.ErrAck := (GVL_Main.key_switch_remote AND GVL_Main.reset_switch)
					OR ErrAck_Pulse.Q
					OR remote_ErrAck;
// detect falling edge 
ErrAck_Trigger(CLK := GVL_Safety.ErrAck);
// send restart pulse on falling edge of ErrAck
restart_pulse(IN := ErrAck_Trigger.Q);

// RESTART Safety after pushing reset or power on delay
GVL_Safety.Restart := (GVL_Main.key_switch_remote AND GVL_Main.start_switch)
 					   OR remote_restart
                       OR restart_pulse.Q;
				
//Error := GVL_Safety.Error OR (GVL_Safety.State <> 1);

//Emergency_stop := NOT GVL_Safety.Stop;

ErrAckLog(	Trigger := GVL_Safety.ErrAck,
			OnMessage := 'Safety error was acknowledged.');
			
RestartLog(	Trigger := GVL_Safety.Restart,
			Level := ADSLOG_MSGTYPE_WARN,
			OnMessage := 'Safety was restarted.');

SafetyLog(	Trigger := Error,
			Level := ADSLOG_MSGTYPE_ERROR,
			OnMessage := 'Safety Error! Emergency stop enganged!',
			OffMessage := 'Safety is OK.',
			OffLevel := ADSLOG_MSGTYPE_HINT);
*)]]></ST>
    </Implementation>
    <LineIds Name="SafetyHandling">
      <LineId Id="159" Count="1" />
      <LineId Id="592" Count="0" />
      <LineId Id="588" Count="0" />
      <LineId Id="456" Count="0" />
      <LineId Id="463" Count="1" />
      <LineId Id="591" Count="0" />
      <LineId Id="593" Count="0" />
      <LineId Id="503" Count="2" />
      <LineId Id="507" Count="0" />
      <LineId Id="453" Count="0" />
      <LineId Id="594" Count="0" />
      <LineId Id="556" Count="0" />
      <LineId Id="558" Count="2" />
      <LineId Id="562" Count="4" />
      <LineId Id="454" Count="0" />
      <LineId Id="557" Count="0" />
      <LineId Id="578" Count="7" />
      <LineId Id="577" Count="0" />
      <LineId Id="586" Count="0" />
      <LineId Id="455" Count="0" />
      <LineId Id="363" Count="0" />
      <LineId Id="161" Count="0" />
      <LineId Id="364" Count="0" />
      <LineId Id="344" Count="0" />
      <LineId Id="343" Count="0" />
      <LineId Id="346" Count="0" />
      <LineId Id="365" Count="0" />
      <LineId Id="348" Count="1" />
      <LineId Id="366" Count="0" />
      <LineId Id="350" Count="0" />
      <LineId Id="389" Count="0" />
      <LineId Id="385" Count="0" />
      <LineId Id="352" Count="1" />
      <LineId Id="351" Count="0" />
      <LineId Id="397" Count="0" />
      <LineId Id="386" Count="0" />
      <LineId Id="355" Count="0" />
      <LineId Id="390" Count="1" />
      <LineId Id="358" Count="0" />
      <LineId Id="356" Count="0" />
      <LineId Id="354" Count="0" />
      <LineId Id="398" Count="0" />
      <LineId Id="392" Count="0" />
      <LineId Id="360" Count="0" />
      <LineId Id="394" Count="0" />
      <LineId Id="393" Count="0" />
      <LineId Id="361" Count="0" />
      <LineId Id="359" Count="0" />
      <LineId Id="399" Count="0" />
      <LineId Id="396" Count="0" />
      <LineId Id="347" Count="0" />
      <LineId Id="402" Count="0" />
      <LineId Id="401" Count="0" />
      <LineId Id="403" Count="1" />
      <LineId Id="406" Count="0" />
      <LineId Id="405" Count="0" />
      <LineId Id="414" Count="1" />
      <LineId Id="418" Count="0" />
      <LineId Id="423" Count="1" />
      <LineId Id="413" Count="0" />
      <LineId Id="367" Count="0" />
      <LineId Id="595" Count="0" />
      <LineId Id="369" Count="0" />
      <LineId Id="596" Count="0" />
      <LineId Id="370" Count="0" />
      <LineId Id="599" Count="0" />
      <LineId Id="597" Count="0" />
      <LineId Id="371" Count="1" />
      <LineId Id="600" Count="0" />
      <LineId Id="373" Count="1" />
      <LineId Id="601" Count="0" />
      <LineId Id="598" Count="0" />
      <LineId Id="375" Count="1" />
      <LineId Id="602" Count="0" />
      <LineId Id="377" Count="2" />
      <LineId Id="368" Count="0" />
      <LineId Id="603" Count="0" />
      <LineId Id="342" Count="0" />
      <LineId Id="165" Count="4" />
      <LineId Id="207" Count="0" />
      <LineId Id="171" Count="2" />
      <LineId Id="200" Count="0" />
      <LineId Id="212" Count="0" />
      <LineId Id="174" Count="0" />
      <LineId Id="211" Count="0" />
      <LineId Id="213" Count="3" />
      <LineId Id="218" Count="0" />
      <LineId Id="309" Count="0" />
      <LineId Id="210" Count="0" />
      <LineId Id="175" Count="0" />
      <LineId Id="275" Count="1" />
      <LineId Id="233" Count="2" />
      <LineId Id="244" Count="0" />
      <LineId Id="239" Count="2" />
      <LineId Id="176" Count="5" />
      <LineId Id="47" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>