<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.15">
  <POU Name="FB_MonetTelescopeControl2" Id="{392c90d3-a441-4c8d-a752-42b25b49f5cd}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_MonetTelescopeControl2 EXTENDS FB_AltAzTelescopeControl
VAR_INPUT
	fbFocus				: I_Focus;
	fbCovers			: I_MirrorCovers;
	fbBrake				: I_Brake;	
	fbHydraulics   		: I_Hydraulics;
	fbElevation			: REFERENCE TO FB_ElevationControl;
	fbAzimuth			: REFERENCE TO FB_AzimuthControl;
	fbDerotator			: REFERENCE TO FB_DerotatorControl;
	bEstopTriggered		: BOOL := FALSE;
END_VAR
VAR_OUTPUT
END_VAR
VAR
	bSlewing			: BOOL;
	bStopped			: BOOL;
	bTracking			: BOOL;
	bHomed				: BOOL;
	bReady				: BOOL;
	bBusy				: BOOL;
	tonTrackingDelay	: TON;		// tracking delay
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[// is telescope slewing?
bSlewing := NOT bTracking AND (fbElevation.fbAxis.InMotion OR fbElevation.fbAxis.InRamp OR
			fbAzimuth.fbAxis.InMotion OR fbAzimuth.fbAxis.InRamp OR
			fbDerotator.fbAxis.InMotion OR fbDerotator.fbAxis.InRamp);
			
// signal must be stable for 5500MS
tonTrackingDelay(
	in := fbElevation.fbAxis.isTracking AND fbAzimuth.fbAxis.isTracking AND fbDerotator.fbAxis.isTracking,
	PT :=T#5500MS, 
	Q => bTracking);
			
// is telescope stopped?
bStopped := (NOT fbElevation.bEnable OR fbElevation.fbAxis.StandStill) AND 
			(NOT fbAzimuth.bEnable OR fbAzimuth.fbAxis.StandStill) AND
			(NOT fbDerotator.bEnable OR fbDerotator.fbAxis.StandStill);
			
// get current coordinates	
fAzimuthCurrent := fbAzimuth.fActualPosition;
fElevationCurrent := fbElevation.fActualPosition;
fDerotatorCurrent := fbDerotator.fActualPosition;

// call super
SUPER^();

// homed, ready, busy
bHomed := fbElevation.bCalibrated AND fbAzimuth.bCalibrated AND fbDerotator.bCalibrated AND fbFocus.Calibrated;
bReady := bHomed AND fbCovers.Opened AND fbElevation.bEnable AND fbAzimuth.bEnable AND fbDerotator.bEnable AND fbBrake.BrakeOpen AND NOT bError;
bBusy  := fbElevation.fbAxis.Busy OR fbAzimuth.fbAxis.Busy OR fbDerotator.fbAxis.Busy OR fbFocus.Busy;

// estop?
IF bEstopTriggered THEN
	fbElevation.Enable := FALSE;
	fbAzimuth.Enable := FALSE;
	fbDerotator.Enable := FALSE;
END_IF]]></ST>
    </Implementation>
    <Method Name="_Initialize" Id="{b82ca6ca-e327-451f-ab83-9e7ad8e568da}">
      <Declaration><![CDATA[METHOD _Initialize : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF NOT bBrakeClearing THEN
	bPowerFailure := TRUE;
	TCSpowerEvent.OnMessage := 'failure: brake clearing not set';
	bPower := FALSE;
ELSIF bError THEN
	bPowerFailure := TRUE;
	TCSpowerEvent.OnMessage := 'Generic error during power on occured.';
	bPower := FALSE;
ELSE
	bPowerFailure := FALSE;		
END_IF

// COVER MUST BE OPENED FOR A SUCCESSFUL WAKE & SHAKE COMMAND!
fbCovers.Open();

// enable elevation, enable azimuth
IF fbCovers.Opened THEN
	fbElevation.Enable := TRUE;
	fbAzimuth.Enable := TRUE;
	fbDerotator.Enable := TRUE;
END_IF

IF fbElevation.Ready AND NOT fbElevation.Calibrated THEN
	fbElevation.HomeAxis := TRUE;
END_IF

IF fbAzimuth.Ready AND NOT fbAzimuth.Calibrated THEN
	fbAzimuth.HomeAxis := TRUE;
END_IF

// enable derotator
IF fbElevation.Ready THEN
	fbDerotator.HomeAxis := fbDerotator.Ready AND NOT fbDerotator.Calibrated;
END_IF

// start calibration of focus after elevation has been calibrated
// this avoids imbalance by the M2 mirror on the elvation during its calibration
IF fbElevation.Calibrated AND NOT fbFocus.Calibrated THEN
	fbFocus.Enable := TRUE;
	fbFocus.HomeAxis := TRUE;
END_IF

IF fbCovers.Opened AND fbElevation.Calibrated AND fbAzimuth.Calibrated AND fbDerotator.Calibrated AND fbFocus.Calibrated THEN
	bPower := FALSE;
	_Initialize := TRUE;
ELSE
	_Initialize := FALSE;
END_IF
]]></ST>
      </Implementation>
    </Method>
    <Method Name="_Park" Id="{b753730c-f439-4fd9-a185-d431d3c6a732}">
      <Declaration><![CDATA[METHOD _Park : BOOL
VAR_INPUT
END_VAR
VAR
	ParkEvent	: FB_Eventlog;
END_VAR
VAR_STAT
	Stage		: USINT := 0;
	LastStage	: USINT := 101;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF bReset OR bError THEN
	Stage := 0;
END_IF
_Park := FALSE;
CASE Stage OF
	0: 
		fbFocus.Position := telescopeConfig.focusPark;
		IF bError THEN // emergency park
			fbBrake.CloseBrake();
			fbElevation.Enable := FALSE;
			fbAzimuth.Enable := FALSE;
			fbDerotator.Enable := FALSE;	
			fbCovers.Close();	
			Stage := 80;
		END_IF
		Stage := 20;
	20:
		fbElevation.Position := telescopeConfig.elevationPark;
		fbElevation.Velocity := 10.0;
		fbElevation.MoveAxis := TRUE;
		fbAzimuth.Position := telescopeConfig.azimuthPark;
		fbAzimuth.Velocity := 10;
		fbAzimuth.MoveAxis := TRUE;
		fbDerotator.Position := telescopeConfig.derotatorPark;
		fbDerotator.Velocity := 10.0;
		fbDerotator.MoveAxis := TRUE;
		IF fbElevation.Busy AND
			fbAzimuth.Busy AND
			fbDerotator.Busy THEN
				Stage := 40;
		END_IF
	40:
		IF fbElevation.MoveDone THEN
			fbElevation.MoveAxis := FALSE;
		END_IF
		IF fbAzimuth.MoveDone THEN
			fbAzimuth.MoveAxis := FALSE;
		END_IF
		IF fbDerotator.MoveDone THEN
			fbDerotator.MoveAxis := FALSE;
		END_IF
		IF NOT bSlewing THEN // all axis standstill
			Stage := 60;
		END_IF
	60:
		IF NOT fbElevation.Enable AND NOT fbAzimuth.Enable AND NOT fbDerotator.Enable THEN
			stage := 80;
		END_IF

		IF bStopped THEN
			fbElevation.Enable := FALSE;
			fbAzimuth.Enable := FALSE;
			fbDerotator.Enable := FALSE;
		END_IF
		
		fbElevation.bMoveAxis := FALSE;
		fbAzimuth.bMoveAxis := FALSE;
		fbDerotator.bMoveAxis := FALSE;
	80:
		IF fbElevation.Enable OR fbAzimuth.Enable OR fbDerotator.Enable THEN
			stage := 60;
		END_IF
		IF NOT fbBrake.BrakeOpen THEN
			fbCovers.Close();
			fbHydraulics.Enable := FALSE;
		END_IF
		IF fbCovers.Closed THEN
			Stage := 100;
		END_IF
	100:
		_Park := TRUE;
		Stage := 0;	
END_CASE
ParkEvent(Trigger := Stage > LastStage, FormatString := 'Parking progress: %s', OnMessage := USINT_TO_STRING(Stage), comm := comm);
LastStage := Stage;
]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="FB_MonetTelescopeControl2">
      <LineId Id="32" Count="0" />
      <LineId Id="17" Count="2" />
      <LineId Id="25" Count="0" />
      <LineId Id="60" Count="1" />
      <LineId Id="65" Count="2" />
      <LineId Id="63" Count="0" />
      <LineId Id="68" Count="0" />
      <LineId Id="26" Count="1" />
      <LineId Id="9" Count="0" />
      <LineId Id="50" Count="0" />
      <LineId Id="53" Count="2" />
      <LineId Id="51" Count="0" />
      <LineId Id="57" Count="0" />
      <LineId Id="56" Count="0" />
      <LineId Id="58" Count="0" />
      <LineId Id="91" Count="0" />
      <LineId Id="71" Count="1" />
      <LineId Id="79" Count="0" />
      <LineId Id="90" Count="0" />
      <LineId Id="100" Count="0" />
      <LineId Id="95" Count="4" />
      <LineId Id="70" Count="0" />
    </LineIds>
    <LineIds Name="FB_MonetTelescopeControl2._Initialize">
      <LineId Id="6" Count="10" />
      <LineId Id="60" Count="0" />
      <LineId Id="17" Count="30" />
      <LineId Id="52" Count="1" />
      <LineId Id="57" Count="2" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_MonetTelescopeControl2._Park">
      <LineId Id="13" Count="2" />
      <LineId Id="98" Count="0" />
      <LineId Id="19" Count="1" />
      <LineId Id="26" Count="0" />
      <LineId Id="28" Count="62" />
      <LineId Id="93" Count="4" />
      <LineId Id="5" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>