<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4026.8">
  <POU Name="MAIN" Id="{0fe844df-7078-44d3-bc48-268e6c994874}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM MAIN
VAR
	ready				: BOOL;		// telescope drives are ready to enable
	error				: BOOL;		// error stat on drive, power or hydraulics
	reset				: BOOL;		// manual, panel or remote reset
	start				: BOOL;		// start hydraulics
	stop				: BOOL;		// stop hydraulics 
	remoteKey			: BOOL;		// manual mode
	brakeClearing		: BOOL := FALSE;	//	open brake
	
	remote_start		: BOOL;
	remote_stop			: BOOL;
	remote_reset		: BOOL;
	remote_keyswitch	: BOOL;
	remote_brake_clearing: BOOL;
	
	commTimer 			: TON := (PT:=T#5S);
	getHostName			: FB_GetHostName;
	hostName			: STRING(255);
	executeHostName		: BOOL := TRUE;
	
	comm				: FB_Comm_MQTT_Influx;
	SafetyHandling		: FB_SafetyHandling(comm := comm);
	CabinetControl		: FB_CabinetControl(comm := comm);
	PowerMonitoring		: FB_PowerMonitoring(comm := comm);
	RoofControl			: FB_RoofControl(comm := comm);
	CoverControl		: FB_CoverControl(comm := comm);
	HydraulicsControl	: FB_HydraulicsControl(comm := comm);
	FocusControl		: FB_FocusControl(comm := comm);
	DerotatorControl	: FB_DerotatorControl(comm := comm);
	ElevationControl	: FB_ElevationControl(comm := comm, cover := CoverControl, hydraulics := HydraulicsControl);
	AzimuthControl		: FB_AzimuthControl(comm := comm);
	TelescopeControl	: FB_TelescopeControl(comm := comm, hydraulics := HydraulicsControl, focus := FocusControl, elevation := ElevationControl, azimuth := AzimuthControl, derotator := DerotatorControl);
	PendantControl		: FB_PendantControl(comm := comm, cover := CoverControl, hydraulics := HydraulicsControl, focus := FocusControl, elevation := ElevationControl, azimuth := AzimuthControl, derotator := DerotatorControl, telescope := TelescopeControl);
END_VAR
VAR CONSTANT
	telescopeConfig		: ST_TelescopeConfig := (longitude := -104.0217, latitude := 30.6714, altitude := 2000.0, 
												 azimuthPark := 190, elevationPark := 60, derotatorPark := -116.42, focusPark := 32.0, 
												 azimuthHome := 190, elevationHome := 40, derotatorPark := -116.42);
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[(* 
Main control loop
* Execute sub modules
* power management
* control panel switches and status lamps

* start switch activates Hydraulics and Trafo
* 
*)

// get hostname for MQTT connection
GetHostName(bExecute := executeHostName, sHostName => HostName);
executeHostName := FALSE;

// run cabinet
CabinetControl();

// get some variables
start 			:= CabinetControl.IsStartPushed() OR remote_start;
stop 			:= CabinetControl.IsStopPushed() OR remote_stop;
remoteKey 		:= CabinetControl.IsKeyOnManual() OR remote_keyswitch;
brakeClearing 	:= CabinetControl.AreBreakesCleared() OR remote_brake_clearing;
reset 			:= CabinetControl.IsResetPushed() OR PendantControl.reset_switch OR remote_reset;		

// start or stop hydraulics
IF start THEN
	HydraulicsControl.enable := TRUE;
END_IF
IF stop THEN
	HydraulicsControl.enable := FALSE;
END_IF

// telescope is ready when power available
PowerMonitoring(phaseOK => ready);

// run all control FBs
TelescopeControl(
	telescopeConfig := telescopeConfig,
	coversOpen		:= CoverControl.isOpen
);
CoverControl();
PendantControl();
HydraulicsControl(
	panLevelMin		:= 3000,
	panLevelMax		:= 10200,
	panPercentMin	:= 0.0,
	panPercentMax	:= 80.0, //56.0,
	brakeClearing	:= brakeClearing
);
ElevationControl(
	calibPosition 	:= 28.5
);
AzimuthControl(
	calibPosition	:= 212.75,
	minPosition		:= -72.0,
	maxPosition		:= 495.0,
	brakeOpen		:= HydraulicsControl.brakeOpen,
);
DerotatorControl(
	minPosition		:= -170.0,
	maxPosition		:= 300.0
);	//
FocusControl(
	telescopeMode 	:= PendantControl.telescope_mode,
	homingPosition	:= 92.02, // 104.02 - 12.00
);
RoofControl(
	min_speed		:= 10000,
	max_speed 		:= 30000, 
	acceleration 	:= 150,
	min_position 	:= 0,
	max_position 	:= 202,
	max_position_diff	:= 2,
	limit_slowdown	:= 5
);
comm(	
	sHostName		:= '169.254.146.10',
    nHostPort  		:= 1883,
    nKeepAlive  	:= 60,
	sTopicSub  		:= 'MONETN/Telescope/SET',
	sTopicPublish	:= 'MONETN/Telemetry',
	sTopicLog		:= 'MONETN/Log',
);

// set control lights
error := Focuscontrol.Error OR CoverControl.Error OR HydraulicsControl.error;
CabinetControl.SetManualLamp(PendantControl.key_switch);

// blink errors
IF SafetyHandling.error THEN
	CabinetControl.SetBlinkError(E_Blink.short);
ELSIF ElevationControl.error OR AzimuthControl.error OR DerotatorControl.Error THEN
	CabinetControl.SetBlinkError(E_Blink.long);
ELSIF HydraulicsControl.oilWarning OR HydraulicsControl.oilHot OR HydraulicsControl.pressureFailure THEN
	CabinetControl.SetBlinkError(E_Blink.slow);
ELSIF error THEN
	CabinetControl.SetBlinkError(E_Blink.on);
ELSE
	CabinetControl.SetBlinkError(E_Blink.off); 
END_IF

// power lamp is always on
CabinetControl.SetBlinkPower(E_Blink.on);

// do safety
SafetyHandling();

// telemetry
commTimer(IN:=TRUE);
IF commTimer.Q THEN
	commTimer(IN:=FALSE);
	comm.Publish('electronics', 'base', 'MainReady', BOOL_TO_STRING(ready));
	comm.Publish('electronics', 'base', 'MasterError', BOOL_TO_STRING(error));
END_IF

]]></ST>
    </Implementation>
    <LineIds Name="MAIN">
      <LineId Id="2072" Count="36" />
      <LineId Id="2185" Count="0" />
      <LineId Id="2187" Count="0" />
      <LineId Id="2186" Count="0" />
      <LineId Id="2110" Count="12" />
      <LineId Id="2182" Count="0" />
      <LineId Id="2180" Count="1" />
      <LineId Id="2183" Count="1" />
      <LineId Id="2123" Count="56" />
      <LineId Id="2" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>