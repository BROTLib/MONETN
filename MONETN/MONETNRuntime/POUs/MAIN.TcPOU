<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.15">
  <POU Name="MAIN" Id="{0fe844df-7078-44d3-bc48-268e6c994874}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM MAIN
VAR
	ready				: BOOL;		// telescope drives are ready to enable
	error				: BOOL;		// error stat on drive, power or hydraulics
	brakeClearing		: BOOL := FALSE;	//	open brake
	
	commTimer 			: TON := (PT:=T#5S);
	getHostName			: FB_GetHostName;
	hostName			: STRING(255);
	executeHostName		: BOOL := TRUE;
	
	eTelescopeMode 		: E_TelescopeMode;
	
	comm				: FB_Comm_MQTT_Influx;
	SafetyHandling		: FB_SafetyHandling(comm := comm);
	CabinetControl		: FB_CabinetControl(comm := comm);
	PowerMonitoring		: FB_PowerMonitoring(comm := comm);
	RoofControl			: FB_RoofControl(comm := comm);
	CoverControl		: FB_MonetCoverControl(comm := comm);
	HydraulicsControl	: FB_MonetHydraulicsControl(comm := comm);
	FocusControl		: FB_FocusControl(comm := comm);
	DerotatorControl	: FB_DerotatorControl(comm := comm);
	ElevationControl	: FB_ElevationControl(comm := comm);
	AzimuthControl		: FB_AzimuthControl(comm := comm);
	TelescopeControl	: FB_MonetTelescopeControl(comm := comm);
	PendantControl		: FB_MonetPendantControl(comm := comm);
END_VAR
VAR CONSTANT
	telescopeConfig		: ST_TelescopeConfig := (longitude := -104.0217, latitude := 30.6714, altitude := 2000.0, 
												 azimuthPark := 190, elevationPark := 60, derotatorPark := -116.42, focusPark := 53.8, 
												 azimuthHome := 190, elevationHome := 40, derotatorPark := -116.42);
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[(* 
Main control loop
* Execute sub modules
* power management
* control panel switches and status lamps

* start switch activates Hydraulics and Trafo
* 
*)

// get hostname for MQTT connection
GetHostName(bExecute := executeHostName, sHostName => HostName);
executeHostName := FALSE;

// run cabinet
CabinetControl();

// telescope mode
IF CabinetControl.KeyLocal THEN
	eTelescopeMode := SEL(HydraulicsControl.Enable, E_TelescopeMode.off, E_TelescopeMode.manual);	
ELSE
	eTelescopeMode := E_TelescopeMode.automatic; 
END_IF

// in local mode we can start or stop hydraulics and open the brake
brakeClearing := TRUE;
IF eTelescopeMode = E_TelescopeMode.manual OR eTelescopeMode = E_TelescopeMode.off THEN
	IF CabinetControl.IsStartPushed() THEN
		HydraulicsControl.Enable := TRUE;
	END_IF
	IF CabinetControl.IsStopPushed() THEN
		HydraulicsControl.Enable := FALSE;
	END_IF
	brakeClearing := CabinetControl.AreBreakesCleared();
	HydraulicsControl.bOpenBrake := brakeClearing;
END_IF

// clear errors
IF CabinetControl.IsResetPushed() OR PendantControl.IbResetButton THEN
	;
END_IF

// telescope is ready when power available
PowerMonitoring(phaseOK => ready);

// only run TelescopeControl in automatic mode
IF eTelescopeMode = E_TelescopeMode.automatic THEN
	TelescopeControl(
		telescopeConfig := telescopeConfig,	
		fbCovers 		:= CoverControl, 
		fbBrake 		:= HydraulicsControl, 
		fbHydraulics 	:= HydraulicsControl, 
		fbFocus 		:= FocusControl, 
		fbElevation 	:= ElevationControl, 
		fbAzimuth 		:= AzimuthControl, 
		fbDerotator 	:= DerotatorControl
	);
END_IF

// run all control FBs
CoverControl();
HydraulicsControl(
	nMinPanLevel	:= 3000,
	nMaxPanLevel	:= 10200,
	fMinPanPercent	:= 0.0,
	fMaxPanPercent	:= 80.0, //56.0,
	bBrakeClearing	:= brakeClearing
);
ElevationControl(
	fCalibPosition 	:= 27.66337, //28.5,
	fbCovers 		:= CoverControl, 
	fbBrake 		:= HydraulicsControl
);
AzimuthControl(
	fCalibPosition	:= 212.43044, //212.75,
	fMinPosition	:= -72.0,
	fMaxPosition	:= 495.0,
	bBrakeOpen		:= HydraulicsControl.brakeOpen,
);
DerotatorControl(
	fMinPosition		:= -170.0,
	fMaxPosition		:= 300.0
);	//
FocusControl(
	eTelescopeMode 	:= eTelescopeMode,
	fHomingPosition	:= 92.02, // 104.02 - 12.00
	fVelocity		:= 0.2
);
RoofControl(
	min_speed		:= 10000,
	max_speed 		:= 30000, 
	acceleration 	:= 150,
	min_position 	:= 0,
	max_position 	:= 202,
	max_position_diff	:= 2,
	limit_slowdown	:= 5
);
PendantControl(
	fbCovers 		:= CoverControl, 
	fbBrake 		:= HydraulicsControl, 
	fbHydraulics 	:= HydraulicsControl, 
	fbFocus 		:= FocusControl, 
	fbElevation 	:= ElevationControl, 
	fbAzimuth 		:= AzimuthControl, 
	fbDerotator 	:= DerotatorControl	
);

// and comm
comm(	
	sHostName		:= '169.254.146.10',
    nHostPort  		:= 1883,
    nKeepAlive  	:= 60,
	sTopicSub  		:= 'MONETN/Telescope/SET',
	sTopicPublish	:= 'MONETN/Telemetry',
	sTopicLog		:= 'MONETN/Log',
	Telescope		:= TelescopeControl,
	Focus			:= FocusControl
);

// set control lights
//error := Focuscontrol.Error OR CoverControl.Error OR HydraulicsControl.Error;
error := CoverControl.Error OR HydraulicsControl.Error;
CabinetControl.SetManualLamp(eTelescopeMode = E_TelescopeMode.manual);

// blink errors
IF SafetyHandling.error THEN
	CabinetControl.SetBlinkError(E_Blink.short);
ELSIF ElevationControl.bError OR AzimuthControl.bError OR DerotatorControl.bError THEN
	CabinetControl.SetBlinkError(E_Blink.long);
ELSIF HydraulicsControl.bOilWarning OR HydraulicsControl.bOilHot OR HydraulicsControl.bPressureFailure THEN
	CabinetControl.SetBlinkError(E_Blink.slow);
ELSIF error THEN
	CabinetControl.SetBlinkError(E_Blink.on);
ELSE
	CabinetControl.SetBlinkError(E_Blink.off); 
END_IF

// power lamp is always on
CabinetControl.SetBlinkPower(E_Blink.on);

// do safety
SafetyHandling();

// telemetry
commTimer(IN:=TRUE);
IF commTimer.Q THEN
	commTimer(IN:=FALSE);
	comm.Publish('electronics', 'base', 'MainReady', BOOL_TO_STRING(ready));
	comm.Publish('electronics', 'base', 'MasterError', BOOL_TO_STRING(error));
END_IF

]]></ST>
    </Implementation>
    <LineIds Name="MAIN">
      <LineId Id="2072" Count="15" />
      <LineId Id="2250" Count="2" />
      <LineId Id="2263" Count="0" />
      <LineId Id="2259" Count="1" />
      <LineId Id="2254" Count="0" />
      <LineId Id="2088" Count="0" />
      <LineId Id="2096" Count="0" />
      <LineId Id="2229" Count="0" />
      <LineId Id="2208" Count="0" />
      <LineId Id="2097" Count="5" />
      <LineId Id="2225" Count="0" />
      <LineId Id="2248" Count="0" />
      <LineId Id="2209" Count="0" />
      <LineId Id="2231" Count="0" />
      <LineId Id="2230" Count="0" />
      <LineId Id="2232" Count="2" />
      <LineId Id="2103" Count="2" />
      <LineId Id="2211" Count="0" />
      <LineId Id="2210" Count="0" />
      <LineId Id="2212" Count="10" />
      <LineId Id="2106" Count="0" />
      <LineId Id="2223" Count="0" />
      <LineId Id="2107" Count="0" />
      <LineId Id="2110" Count="0" />
      <LineId Id="2112" Count="8" />
      <LineId Id="2188" Count="1" />
      <LineId Id="2121" Count="1" />
      <LineId Id="2182" Count="0" />
      <LineId Id="2180" Count="1" />
      <LineId Id="2183" Count="1" />
      <LineId Id="2123" Count="1" />
      <LineId Id="2187" Count="0" />
      <LineId Id="2126" Count="3" />
      <LineId Id="2246" Count="0" />
      <LineId Id="2130" Count="9" />
      <LineId Id="2236" Count="9" />
      <LineId Id="2235" Count="0" />
      <LineId Id="2140" Count="6" />
      <LineId Id="2207" Count="0" />
      <LineId Id="2249" Count="0" />
      <LineId Id="2147" Count="3" />
      <LineId Id="2206" Count="0" />
      <LineId Id="2151" Count="28" />
      <LineId Id="2" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>